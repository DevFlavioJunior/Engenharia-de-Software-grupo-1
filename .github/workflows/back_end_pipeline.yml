name: Pipeline to build back end

on:
  push:
    branches:
      - main

  pull_request:
    types: [closed]
    branches:
      - main
    paths:
      - back-end/**

  workflow_dispatch:
    inputs:
      pass_sast:
        type: boolean
        default: false
      pass_npm_audit:
        type: boolean
        default: false

permissions:
  contents: write
  pull-requests: write
  security-events: write

jobs:
  npm-audit:
    if: ${{ inputs.pass_npm_audit == false }}
    name: Run npm audit
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: back-end

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: show files
        run: ls

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run npm audit
        run: npm audit --audit-level=high

  sast:
    if: ${{ inputs.pass_sast == false }}
    name: Run sast analysis
    uses: ./.github/workflows/sast.yml
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
      security-events: write
    with:
      path: back-end

  docker-build:
    name: Build and update docker image
    needs: [npm-audit, sast]
    uses: ./.github/workflows/docker_build.yml
    with:
      version_code: latest
      context: back-end
      docker_image_name: esg1-api
    secrets:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      DOCKER_IMAGE_NAME: ${{ secrets.DOCKER_IMAGE_NAME }}

  update-prod:
    runs-on: ubuntu-22.04
    needs: [docker-build]
    environment: prod
    steps:
      - name: SSH to DigitalOcean and update environment
        uses: appleboy/ssh-action@v1.0.3
        env:
          HOST: ${{ secrets.PROD_ENV_HOST }}
          USERNAME: ${{ secrets.PROD_ENV_USERNAME }}
          PASSWORD: ${{ secrets.SSH_PASSPHRASE }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
        with:
          host: ${{ env.HOST}}
          username: ${{ env.USERNAME }}
          password: ${{ env.PASSWORD }}
          passphrase: ${{ env.PASSWORD }}
          key: ${{ env.key }}
          script: |
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker compose down api-node || true
            docker pull ${{ secrets.DOCKER_USERNAME }}/esg1-api:latest
            cd application/
            docker compose up -d api-node
